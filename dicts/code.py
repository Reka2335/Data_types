def task_1_dict(input_line):
    dict_1 = {}

    # Подготавливаем список для сбора результатов подсчёта
    lst = []

    # Разделяем входное предложение на отдельные слова и итерируем каждое слово
    words = input_line.split()

    for el in words:
        # Если текущее слово ещё не находится в словаре, тогда добавляем его в словарь
        # и присваиваем счётчик как 0
        if el not in dict_1:
            dict_1[el] = 0

        # Если текущее слово есть уже в словаре, тогда увеличиваем счётчик на 1
        else:
            dict_1[el] += 1

        # Добавляем в список результат для текущего слова
        lst.append(dict_1[el])

    # Выводим результат
    print(*lst)
    # 0 0 1 0 0


def task_2_dict(input_line):
    # Подготавливаем словарь для сбора отдельных слов и их подсчёта
    dct = {}

    # Подготавливаем список для сбора результатов подсчёта
    lst = []

    # Разделяем входное предложение на отдельные слова и итерируем каждое слово
    words = input_line.split()
    for el in words:    
        # Если текущее слово ещё не находится в словаре, тогда добавляем его в словарь
        # и присваиваем счётчик как 0
        if el not in dct:
            dct[el] = 0

        # Если текущее слово есть уже в словаре, тогда увеличиваем счётчик на 1
        else:
            dct[el] += 1
    
    # Итерируем полученный словарь
    for key, value in dct.items():
        #Проверяем, если в текущей паре {key: value} значение value больше или равно максимальному
        if value == max(dct.values()):

            # Добавляем значение key из такой пары в список
            lst.append(key)

    print(*lst)        

    # Выводим результат предварительно отсортировав слова в лексокологическом порядке

def task_3_dict(input_line):
    lst = input_line.split()



    # Обрабатываем результат
    # Подготавливаем список для сбора слов по отдельности
    lst1 = []

    # Подготавливаем список для сбора индексов
    ind = []

    # Итерируем результирующий список со словами
    for el in lst:

        # Делаем проверку, если не встретилось до
        if el not in lst1:    
            # Добавляем результат
            ind.append(-1)

        # Делаем проверку, если встретилось до
        else:
            # Находим индекс
            indeces = [i for i, element in enumerate(lst) if element == el]
            index = indeces[lst1.count(el) - 1]
            # Добавляем результат
            ind.append(index)

        lst1.append(el)
    

    # Выводим финальный результат
    print(*ind)

def task_4_dict(lst):
    
    dict_1 = {i: i for i in lst}
    print(dict_1)

def task_5_dict(nums):
    
    dict1 = {}


    # Подготавливаем переменную для подсчёта произведения
    umn = 0


    # Итерируем пары элементов списка в двух циклах
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):


            # Считаем произведение
            umn = nums[i] * nums[j]


            # Проверяем, если такого произведения ещё нет в словаре
            if umn not in dict1:

                # Добавляем в словарь: ключ - это произведение, а значение - это 1
                dict1[umn] = 1

                # Проверяем, если такое произведение уже есть в словаре
            else:

                    # Добавляем в словарь по ключу произведение: его значение + 1
                dict1[umn] += 1


        # Смотрим на словарь


        # Подготавливаем переменную для суммы
        summ = 0

        # Итерируем все значения словаря
        for el in dict1.values():

            # Проверяем, если значение больше, чем 1
            if el > 1:

                # Применяем формулу и добавляем к общей сумме
                summ += el * (el - 1) * 4


        # Выводим результат
    print(int(summ))

